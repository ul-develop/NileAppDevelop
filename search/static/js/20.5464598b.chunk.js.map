{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-federated-sign-in.entry.js","../node_modules/@aws-amplify/ui-components/dist/esm-es5/constants-d1abe7de.js","../node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-types-78df304e.js"],"names":["logger","AmplifyFederatedSignIn","hostRef","this","authState","SignIn","federated","prototype","componentWillLoad","configure","Error","_a","oauth","oauth_config","Object","assign","auth0","render","values","includes","debug","USERNAME_SUFFIX","EMAIL_SUFFIX","CODE_SUFFIX","PHONE_SUFFIX","PASSWORD_SUFFIX","COUNTRY_DIAL_CODE_SUFFIX","COUNTRY_DIAL_CODE_DEFAULT","AUTH_SOURCE_KEY","REDIRECTED_FROM_HOSTED_UI","AUTHENTICATOR_AUTHSTATE","PHONE_EMPTY_ERROR_MESSAGE","NO_AUTH_MODULE_FOUND","NO_STORAGE_MODULE_FOUND","NO_INTERACTIONS_MODULE_FOUND","SETUP_TOTP","USER_NOT_SETUP_SOFTWARE_TOKEN_MFA","USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA","SUCCESS","AUTH_CHANNEL","UI_AUTH_CHANNEL","TOAST_AUTH_ERROR_EVENT","AUTH_STATE_CHANGE_EVENT","AuthState","MfaOption","ChallengeName","AuthFormField","UsernameAlias"],"mappings":"+GAAA,gHAKIA,EAAS,IAAI,IAAc,6BAE3BC,EAEJ,WACE,SAASA,EAAuBC,GAC9B,YAAiBC,KAAMD,GAGvBC,KAAKC,UAAY,IAAUC,OAG3BF,KAAKG,UAAY,GA6CnB,OA1CAL,EAAuBM,UAAUC,kBAAoB,WACnD,IAAK,KAAkC,oBAAnB,IAAKC,UACvB,MAAM,IAAIC,MAAM,KAGlB,IAAIC,EAAK,IAAKF,YAAYG,MACtBA,OAAe,IAAPD,EAAgB,GAAKA,EAE7BC,EAAc,OAChBT,KAAKG,UAAUO,aAAeC,OAAOC,OAAOD,OAAOC,OAAO,GAAIZ,KAAKG,UAAUO,cAAeD,GACnFA,EAAkB,aAC3BT,KAAKG,UAAUO,aAAeC,OAAOC,OAAOD,OAAOC,OAAO,GAAIZ,KAAKG,UAAUO,cAAeD,EAAkB,aAG5GA,EAAa,QACfT,KAAKG,UAAUU,MAAQF,OAAOC,OAAOD,OAAOC,OAAO,GAAIZ,KAAKG,UAAUU,OAAQJ,EAAa,SAI/FX,EAAuBM,UAAUU,OAAS,WACxC,OAAKd,KAAKG,UAMLQ,OAAOI,OAAO,KAAWC,SAAShB,KAAKC,YAI5CJ,EAAOoB,MAAM,sBAAuBjB,KAAKG,WAClC,YAAE,uBAAwB,CAC/B,YAAa,6BACZ,YAAE,kBAAmB,CACtB,YAAa,kCACZ,YAAE,4BAA6B,CAChCF,UAAWD,KAAKC,UAChB,YAAa,4BACbE,UAAWH,KAAKG,eAXT,MANPN,EAAOoB,MAAM,yCACbpB,EAAOoB,MAAM,uEACN,OAmBJnB,EArDT,I,iCCTA,4uBAEA,IAAIoB,EAAkB,WAClBC,EAAe,QACfC,EAAc,OACdC,EAAe,QACfC,EAAkB,WAElBC,EAA2B,2BAC3BC,EAA4B,KAE5BC,EAAkB,sBAClBC,EAA4B,oCAC5BC,EAA0B,kCAE1BC,EAA4B,gCAC5BC,EAAuB,oEACvBC,EAA0B,0EAC1BC,EAA+B,oFAE/BC,EAAa,aAEbC,EAAoC,yCACpCC,EAAuC,2CAEvCC,EAAU,UAEVC,EAAe,OACfC,EAAkB,UAClBC,EAAyB,iBACzBC,EAA0B,mB,iCC7B9B,IAAIC,EAuBAC,EAQAC,EAUAC,EAMAC,EAhDJ,0KAGA,SAAWJ,GACTA,EAAkB,OAAI,SACtBA,EAAmB,QAAI,UACvBA,EAAkB,OAAI,SACtBA,EAAmB,QAAI,UACvBA,EAAqB,UAAI,YACzBA,EAAoB,SAAI,WACxBA,EAAqB,UAAI,YACzBA,EAAyB,cAAI,gBAC7BA,EAAsC,2BAAI,0BAC1CA,EAAyB,cAAI,gBAC7BA,EAAsC,2BAAI,6BAC1CA,EAA+B,oBAAI,sBACnCA,EAA0B,eAAI,iBAC9BA,EAAyB,cAAI,oBAC7BA,EAAsB,WAAI,aAC1BA,EAAqB,UAAI,YACzBA,EAA+B,oBAAI,sBACnCA,EAAyB,cAAI,gBAlB/B,CAmBGA,IAAcA,EAAY,KAI7B,SAAWC,GACTA,EAAgB,KAAI,OACpBA,EAAe,IAAI,MACnBA,EAAiB,MAAI,QAHvB,CAIGA,IAAcA,EAAY,KAI7B,SAAWC,GACTA,EAAgC,iBAAI,qBACpCA,EAAsB,OAAI,UAC1BA,EAAmC,oBAAI,wBACvCA,EAAwB,SAAI,YAC5BA,EAA+B,gBAAI,mBALrC,CAMGA,IAAkBA,EAAgB,KAIrC,SAAWC,GACTA,EAAwB,SAAI,WAD9B,CAEGA,IAAkBA,EAAgB,KAIrC,SAAWC,GACTA,EAAwB,SAAI,WAC5BA,EAAqB,MAAI,QACzBA,EAA4B,aAAI,eAHlC,CAIGA,IAAkBA,EAAgB","file":"static/js/20.5464598b.chunk.js","sourcesContent":["import { r as registerInstance, h } from './index-3fb5c139.js';\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { N as NO_AUTH_MODULE_FOUND } from './constants-d1abe7de.js';\nvar logger = new ConsoleLogger('amplify-federated-sign-in');\n\nvar AmplifyFederatedSignIn =\n/** @class */\nfunction () {\n  function AmplifyFederatedSignIn(hostRef) {\n    registerInstance(this, hostRef);\n    /** The current authentication state. */\n\n    this.authState = AuthState.SignIn;\n    /** Federated credentials & configuration. */\n\n    this.federated = {};\n  }\n\n  AmplifyFederatedSignIn.prototype.componentWillLoad = function () {\n    if (!Auth || typeof Auth.configure !== 'function') {\n      throw new Error(NO_AUTH_MODULE_FOUND);\n    }\n\n    var _a = Auth.configure().oauth,\n        oauth = _a === void 0 ? {} : _a; // backward compatibility\n\n    if (oauth['domain']) {\n      this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth);\n    } else if (oauth['awsCognito']) {\n      this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth['awsCognito']);\n    }\n\n    if (oauth['auth0']) {\n      this.federated.auth0 = Object.assign(Object.assign({}, this.federated.auth0), oauth['auth0']);\n    }\n  };\n\n  AmplifyFederatedSignIn.prototype.render = function () {\n    if (!this.federated) {\n      logger.debug('federated prop is empty. show nothing');\n      logger.debug('federated={google_client_id: , facebook_app_id: , amazon_client_id}');\n      return null;\n    }\n\n    if (!Object.values(AuthState).includes(this.authState)) {\n      return null;\n    }\n\n    logger.debug('federated Config is', this.federated);\n    return h(\"amplify-form-section\", {\n      \"data-test\": \"federated-sign-in-section\"\n    }, h(\"amplify-section\", {\n      \"data-test\": \"federated-sign-in-body-section\"\n    }, h(\"amplify-federated-buttons\", {\n      authState: this.authState,\n      \"data-test\": \"federated-sign-in-buttons\",\n      federated: this.federated\n    })));\n  };\n\n  return AmplifyFederatedSignIn;\n}();\n\nexport { AmplifyFederatedSignIn as amplify_federated_sign_in };","// Dictionaries\n// fieldId constants\nvar USERNAME_SUFFIX = 'username';\nvar EMAIL_SUFFIX = 'email';\nvar CODE_SUFFIX = 'code';\nvar PHONE_SUFFIX = 'phone';\nvar PASSWORD_SUFFIX = 'password'; // Country Dial Code common constants\n\nvar COUNTRY_DIAL_CODE_SUFFIX = 'country-dial-code-select';\nvar COUNTRY_DIAL_CODE_DEFAULT = '+1'; // Auth Keys\n\nvar AUTH_SOURCE_KEY = 'amplify-auth-source';\nvar REDIRECTED_FROM_HOSTED_UI = 'amplify-redirected-from-hosted-ui';\nvar AUTHENTICATOR_AUTHSTATE = 'amplify-authenticator-authState'; // Error message Common Constants\n\nvar PHONE_EMPTY_ERROR_MESSAGE = 'Phone number can not be empty';\nvar NO_AUTH_MODULE_FOUND = 'No Auth module found, please ensure @aws-amplify/auth is imported';\nvar NO_STORAGE_MODULE_FOUND = 'No Storage module found, please ensure @aws-amplify/storage is imported';\nvar NO_INTERACTIONS_MODULE_FOUND = 'No Interactions module found, please ensure @aws-amplify/interactions is imported'; // TOTP Messages\n\nvar SETUP_TOTP = 'SETUP_TOTP'; // Select MFA Types Messages\n\nvar USER_NOT_SETUP_SOFTWARE_TOKEN_MFA = 'User has not set up software token mfa';\nvar USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA = 'User has not verified software token mfa'; // Common events\n\nvar SUCCESS = 'SUCCESS'; // Hub Events and Channels\n\nvar AUTH_CHANNEL = 'auth';\nvar UI_AUTH_CHANNEL = 'UI Auth';\nvar TOAST_AUTH_ERROR_EVENT = 'ToastAuthError';\nvar AUTH_STATE_CHANGE_EVENT = 'AuthStateChange';\nexport { AUTH_CHANNEL as A, COUNTRY_DIAL_CODE_SUFFIX as C, EMAIL_SUFFIX as E, NO_AUTH_MODULE_FOUND as N, PHONE_EMPTY_ERROR_MESSAGE as P, REDIRECTED_FROM_HOSTED_UI as R, SETUP_TOTP as S, TOAST_AUTH_ERROR_EVENT as T, UI_AUTH_CHANNEL as U, AUTH_STATE_CHANGE_EVENT as a, PHONE_SUFFIX as b, AUTHENTICATOR_AUTHSTATE as c, NO_INTERACTIONS_MODULE_FOUND as d, NO_STORAGE_MODULE_FOUND as e, USER_NOT_SETUP_SOFTWARE_TOKEN_MFA as f, USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA as g, COUNTRY_DIAL_CODE_DEFAULT as h, SUCCESS as i, AUTH_SOURCE_KEY as j, CODE_SUFFIX as k, PASSWORD_SUFFIX as l, USERNAME_SUFFIX as m };","// TODO: Move these values to or extract them from the Cognito Provider in the Auth category for Auth V2\nvar AuthState;\n\n(function (AuthState) {\n  AuthState[\"SignUp\"] = \"signup\";\n  AuthState[\"SignOut\"] = \"signout\";\n  AuthState[\"SignIn\"] = \"signin\";\n  AuthState[\"Loading\"] = \"loading\";\n  AuthState[\"SignedOut\"] = \"signedout\";\n  AuthState[\"SignedIn\"] = \"signedin\";\n  AuthState[\"SigningUp\"] = \"signingup\";\n  AuthState[\"ConfirmSignUp\"] = \"confirmSignUp\";\n  AuthState[\"confirmingSignUpCustomFlow\"] = \"confirmsignupcustomflow\";\n  AuthState[\"ConfirmSignIn\"] = \"confirmSignIn\";\n  AuthState[\"confirmingSignInCustomFlow\"] = \"confirmingsignincustomflow\";\n  AuthState[\"VerifyingAttributes\"] = \"verifyingattributes\";\n  AuthState[\"ForgotPassword\"] = \"forgotpassword\";\n  AuthState[\"ResetPassword\"] = \"resettingpassword\";\n  AuthState[\"SettingMFA\"] = \"settingMFA\";\n  AuthState[\"TOTPSetup\"] = \"TOTPSetup\";\n  AuthState[\"CustomConfirmSignIn\"] = \"customConfirmSignIn\";\n  AuthState[\"VerifyContact\"] = \"verifyContact\";\n})(AuthState || (AuthState = {}));\n\nvar MfaOption;\n\n(function (MfaOption) {\n  MfaOption[\"TOTP\"] = \"TOTP\";\n  MfaOption[\"SMS\"] = \"SMS\";\n  MfaOption[\"NOMFA\"] = \"NOMFA\";\n})(MfaOption || (MfaOption = {}));\n\nvar ChallengeName;\n\n(function (ChallengeName) {\n  ChallengeName[\"SoftwareTokenMFA\"] = \"SOFTWARE_TOKEN_MFA\";\n  ChallengeName[\"SMSMFA\"] = \"SMS_MFA\";\n  ChallengeName[\"NewPasswordRequired\"] = \"NEW_PASSWORD_REQUIRED\";\n  ChallengeName[\"MFASetup\"] = \"MFA_SETUP\";\n  ChallengeName[\"CustomChallenge\"] = \"CUSTOM_CHALLENGE\";\n})(ChallengeName || (ChallengeName = {}));\n\nvar AuthFormField;\n\n(function (AuthFormField) {\n  AuthFormField[\"Password\"] = \"password\";\n})(AuthFormField || (AuthFormField = {}));\n\nvar UsernameAlias;\n\n(function (UsernameAlias) {\n  UsernameAlias[\"username\"] = \"username\";\n  UsernameAlias[\"email\"] = \"email\";\n  UsernameAlias[\"phone_number\"] = \"phone_number\";\n})(UsernameAlias || (UsernameAlias = {}));\n\nexport { AuthState as A, ChallengeName as C, MfaOption as M, UsernameAlias as U, AuthFormField as a };"],"sourceRoot":""}